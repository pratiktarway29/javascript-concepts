CommonJS, AMD, and UMD are different module formats used in JavaScript to organize and structure code in a modular way. Each of these formats has its own syntax and use cases.

1. CommonJS:
   - CommonJS is a module format primarily used in server-side JavaScript environments like Node.js.
   - It follows a synchronous approach, meaning that modules are loaded and executed in a blocking manner.
   - Modules in CommonJS are defined using the `module.exports` and `require` statements.
   - For example, you can define a module in CommonJS like this:
     ```javascript
     // module.js
     const someData = "Hello, CommonJS!";
     module.exports = someData;
     ```
     And then you can import and use it in another module like this:
     ```javascript
     // main.js
     const myModule = require('./module.js');
     console.log(myModule); // Outputs: Hello, CommonJS!
     ```

2. AMD (Asynchronous Module Definition):
   - AMD is a module format designed for the browser and asynchronous loading of modules.
   - It allows modules to be loaded on-demand, improving the performance of web applications by reducing initial load times.
   - Popular AMD loaders include RequireJS.
   - Modules in AMD are defined using the `define` function and can specify dependencies.
   - For example:
     ```javascript
     // Define a module
     define(['dependency'], function(dependency) {
       // Module code here
     });
     ```
     And you can load and use it asynchronously:
     ```javascript
     require(['mymodule'], function(mymodule) {
       // Use mymodule here
     });
     ```

3. UMD (Universal Module Definition):
   - UMD is a module format that aims to provide compatibility for both CommonJS and AMD environments, as well as the global scope in browsers.
   - It's a flexible approach that allows a module to adapt to various module systems or be used as a standalone script.
   - UMD modules often have a wrapper around them to detect the environment and load dependencies accordingly.
   - Here's a simplified example of a UMD module:
     ```javascript
     (function (root, factory) {
       if (typeof define === 'function' && define.amd) {
         // AMD
         define(['dependency'], factory);
       } else if (typeof exports === 'object') {
         // CommonJS
         module.exports = factory(require('dependency'));
       } else {
         // Global variable
         root.myModule = factory(root.dependency);
       }
     })(this, function (dependency) {
       // Module code here
       return {
         // Module exports
       };
     });
     ```

In summary, these module formats serve different purposes and are used in various JavaScript environments. CommonJS is common in Node.js, AMD is used for asynchronous loading in browsers, and UMD provides compatibility for both CommonJS and AMD, as well as global usage. The choice of module format depends on the specific needs of your project and the environment in which your code will run.